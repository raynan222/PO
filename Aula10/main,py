import timeit
from random import *
import matplotlib.pyplot as plt


"""FUNÇÕES DE GERAÇÃO DE LISTA"""
def geraLista(tam):
    lista = list(range(1, tam + 1))
    shuffle(lista)
    return lista
"""FUNÇÕES DE GERAÇÃO DE LISTA"""


""""FUNÇÃO PARA DESENHAR GRAFICO"""
def desenhaGrafico(x,HSort, xLabel = "Entradas", yLabel = "Saídas", nam="img"):
    fig = plt.figure(figsize=(10, 13))
    ax = fig.add_subplot(111)
    ax.plot(x,HSort, label = "Heap Sort")
    ax.legend(bbox_to_anchor=(1, 1),bbox_transform=plt.gcf().transFigure)
    plt.ylabel(yLabel)
    plt.xlabel(xLabel)
    plt.savefig(nam)
"""FUNÇÃO PARA DESENHAR GRAFICO"""


"""FUNÇÕES PARA ORDENAÇÃO"""
def heap(lista, n, i): 
  maior = i
  es = 2 * i + 1
  di = 2 * i + 2
  if es < n and lista[i] < lista[es]:
    maior = es 
  if di < n and lista[maior] < lista[di]: 
    maior = di
  if maior != i: 
    lista[i], lista[maior] = lista[maior],lista[i]
    heap(lista, n, maior)

def HSort(lista): 
  n = len(lista)
  for i in range(n, -1, -1): 
    heap(lista, n, i) 
  for i in range(n-1, 0, -1): 
    lista[i], lista[0] = lista[0], lista[i]
    heap(lista, i, 0) 
"""FUNÇÕES PARA ORDENAÇÃO"""

lista = [100000, 200000, 400000, 500000, 1000000, 2000000]
saidaH = []

for i in range(len(lista)):
  print("Começou: "+str(lista[i]))
  saidaH.append(timeit.timeit("HSort({})".format(geraLista(lista[i])),setup="from __main__ import geraLista,HSort",number=1))
  print("Terminou: "+str(lista[i]))

desenhaGrafico(lista,saidaH,nam="Tempo")
